#!/usr/bin/env python

import pygame

class Space:
    def __init__(self, background):
        self.bg = pygame.image.load(background)

class Player:
    def __init__(self, initial_x = 640):
        self.x = initial_x
        self.y = 700
        self.ship = pygame.image.load('ship.png')

        self.vx = 0
        self.max_v = 0

    def set_speed(self, vx):
        self.max_v = vx

    def update(self):
        if self.vx < self.max_v:
            self.vx += 1
        if self.vx > self.max_v:
            self.vx -= 1
        self.x += self.vx

    def draw_into(self, layout):
        layout.blit(self.ship, (self.x, self.y))

    def laser_pos(self):
        return (self.x, self.y)

class Game:
    def __init__(self, screen):
        self.__scr = screen

        self.player = Player()
        self.space = Space('background.jpg')

        self.shoot = pygame.image.load('shoot.png')
        self.shoot_sound = pygame.mixer.Sound('shoot.wav')

        self.laser_x = 0
        self.laser_y = 0
        self.laser = False

    def run(self):

        while 1:
            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    return
                elif (event.type == pygame.KEYDOWN and
                      event.key == pygame.K_ESCAPE):
                    return
                elif (event.type == pygame.KEYDOWN and
                      event.key == pygame.K_LEFT):
                    self.player.set_speed(-4)
                elif (event.type == pygame.KEYDOWN and
                      event.key == pygame.K_RIGHT):
                    self.player.set_speed(4)
                elif ((event.type == pygame.KEYUP) and
                      ((event.key == pygame.K_LEFT) or (event.key == pygame.K_RIGHT))):
                    self.player.set_speed(0)
                elif (event.type == pygame.KEYDOWN and
                      event.key == pygame.K_SPACE) and not self.laser:
                    self.shoot_sound.play()
                    self.laser = True
                    self.laser_x, self.laser_y  = self.player.laser_pos()

            self.player.update()

            # Draw everything
            self.__scr.blit(self.space.bg, (0, 0))
            self.player.draw_into(self.__scr)

            if self.laser:
                self.__scr.blit(self.shoot, (self.laser_x, self.laser_y))
                self.laser_y = self.laser_y - 1
                if self.laser_y <= -20:
                    self.laser = False

            pygame.display.flip()

if __name__ == '__main__':
    pygame.init()
    screen = pygame.display.set_mode((1024, 768), pygame.FULLSCREEN)
    game = Game(screen)
    game.run()
